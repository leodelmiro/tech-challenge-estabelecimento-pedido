spring:
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY:test}
        secret-key: ${AWS_SECRET_KEY:test}
        session: ${AWS_SESSION_TOKEN:test}
      region:
        static: ${AWS_REGION:us-east-1}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://host.docker.internal:5432/pedido}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        boot:
          allow_jdbc_metadata_access: false
        ddl-auto: none
  sql:
    init:
      mode: never

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  server:
    servlet:
      context-path: /actuator

external-apis:
  cliente:
    url: ${CLIENTE_URL:http://host.docker.internal:8081/api/v1}
  produto:
    url: ${PRODUTO_URL:http://host.docker.internal:8082/api/v1}
  pagamento:
    url: ${PAGAMENTO_URL:http://host.docker.internal:8083/api/v1}

amazon:
  sqs:
    endpoint: ${SQS_URL:http://host.docker.internal:4567}
    pagamentoEfetuado: pagamento-efetuado
